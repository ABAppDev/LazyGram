{"version":3,"sources":["components/Navbar.js","screens/Home.js","screens/Profile.js","screens/Login.js","screens/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","id","Home","Profile","Login","Signup","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAgBeA,EAfA,WACX,OACI,8BACI,sBAAKC,UAAU,oBAAf,UACI,mBAAGC,KAAK,IAAID,UAAU,kBAAtB,sBACA,qBAAIE,GAAG,aAAaF,UAAU,QAA9B,UACI,6BAAI,mBAAGC,KAAK,SAAR,qBACJ,6BAAI,mBAAGA,KAAK,UAAR,uBACJ,6BAAI,mBAAGA,KAAK,WAAR,gC,cCFTE,EALF,WACT,OACI,uCCGOC,EALC,WACZ,OACI,0CCGOC,EALD,WACV,OACI,wCCGOC,EALA,WACX,OACI,yCCmBOC,MAdf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUC,QAAS,cAAC,EAAD,MACrC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWC,QAAS,cAAC,EAAD,aCL/BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51807482.chunk.js","sourcesContent":["import React from \"react\"\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper white\">\r\n                <a href=\"/\" className=\"brand-logo left\">LazyGram</a>\r\n                <ul id=\"nav-mobile\" className=\"right\">\r\n                    <li><a href=\"/login\">Login</a></li>\r\n                    <li><a href=\"/signup\">Sign Up</a></li>\r\n                    <li><a href=\"/profile\">Profile</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from \"react\"\r\n\r\nconst Home = () => {\r\n    return (\r\n        <h1>Home</h1>\r\n    )\r\n}\r\nexport default Home","import React from \"react\"\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <h1>Profile</h1>\r\n    )\r\n}\r\nexport default Profile","import React from \"react\"\r\n\r\nconst Login = () => {\r\n    return (\r\n        <h1>Login</h1>\r\n    )\r\n}\r\nexport default Login","import React from \"react\"\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <h1>Signup</h1>\r\n    )\r\n}\r\nexport default Signup","import './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport Home from './screens/Home';\r\nimport Profile from './screens/Profile';\r\nimport Login from './screens/Login';\r\nimport Signup from './screens/Signup';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Home />} />\r\n        <Route exact path=\"/login\" element={<Login />} />\r\n        <Route exact path=\"/signup\" element={<Signup />} />\r\n        <Route exact path=\"/profile\" element={<Profile />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}